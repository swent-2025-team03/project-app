name: CI with SonarCloud

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AgriHealth-Alert-main

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive
          fetch-depth: 0

      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          
      - name: Retrieve gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created. Should be present"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Assemble
        run: ./gradlew assembleDebug lint --parallel --build-cache

      - name: Run tests
        run: ./gradlew check --parallel --build-cache

      - name: Start Firebase emulators
        run: |
          firebase emulators:start --only auth,firestore --project demo-project & 
          sleep 3 
          curl -X PATCH "http://localhost:9099/emulator/v1/projects/agrihealth-alert/config" \ 
          -H "Content-Type: application/json" \
          -d '{"signIn": {"allowDuplicateEmails": true}}'

      - name: Run instrumentation tests
        timeout-minutes: 25
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          avd-name: github
          working-directory: ./AgriHealth-Alert-main
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x2400
          disable-animations: true
          script: |
            ls -alh
            ./gradlew connectedCheck --parallel --build-cache

      - name: Generate coverage
        run: |
          ./gradlew jacocoTestReport

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: AgriHealth-Alert-main
          args: >
            -Dsonar.sources=app/src/main/java
            -Dsonar.tests=app/src/test/java,app/src/androidTest/java
            -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
            -Dsonar.sources=app/src/main/java
            -Dsonar.tests=app/src/test/java,app/src/androidTest/java
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
