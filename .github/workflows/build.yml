name: CI with SonarCloud

on:
  push:
    branches:
      - main
      - Feature/*
  pull_request:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
  defaults:
      run:
        working-directory: ./AgriHealth-Alert-main

  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Remove current gradle cache
      run: rm -rf ~/.gradle

    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
          
    - name: Retrieve gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    - name: Decode secrets
      env:
        GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      run: |
        if [ -n "$GOOGLE_SERVICES" ]; then
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
        else
          echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created. Should be present"
        fi

    - name: Grant execute permission for gradlew
      run: |
        chmod +x ./gradlew

    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Assemble
      run: |
        # To run the CI with debug information, add --info
        ./gradlew assembleDebug lint --parallel --build-cache

    - name: Run tests
      run: |
        # To run the CI with debug information, add --info
        ./gradlew check --parallel --build-cache

    - name: Start Firebase emulators
      run: |
        if [ -e "firebase.json" ] && jq -e '.emulators' firebase.json >/dev/null; then
          echo "Starting Firebase emulators for instrumentation tests..."
          firebase emulators:start --only auth,firestore --project demo-project &
          echo "Firebase emulators started"
        else
          echo "Firebase emulators not configured, skipping emulator startup..."
        fi
          
    - name: Run instrumentation tests
      timeout-minutes: 25
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 34
        target: google_apis
        arch: x86_64
        avd-name: github
        force-avd-creation: true
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x2400
        disable-animations: true
        script: ./gradlew connectedCheck --parallel --build-cache

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
         projectBaseDir: AgriHealth-Alert-main
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
